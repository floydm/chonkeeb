/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        to_default {
            bindings = <&to 0>;
            key-positions = <0 1>;
        };

        tog_game {
            bindings = <&tog 3>;
            key-positions = <0 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp GRAVE  &kp N1    &kp N2     &kp N3    &kp N4          &kp N5     &kp N6     &kp N7   &kp N8     &kp N9     &kp N0    &kp EQUAL
&kp TAB    &kp Q     &kp W      &kp E     &kp R           &kp T      &kp Y      &kp U    &kp I      &kp O      &kp P     &kp MINUS
&kp ESC    &kp A     &kp S      &kp D     &kp F           &kp G      &kp H      &kp J    &kp K      &kp L      &kp SEMI  &kp SQT
&kp LBKT   &kp Z     &kp X      &kp C     &kp V           &kp B      &kp N      &kp M    &kp COMMA  &kp DOT    &kp FSLH  &kp RBKT
&mo 1      &kp LGUI  &kp LCTRL  &kp LALT  &mt LSHFT BSPC  &kp SPACE  &lt 2 RET  &kp DEL  &kp RALT   &kp RCTRL  &kp RGUI  &kp RSHFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Lower {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans       &trans
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans       &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans       &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans       &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &bootloader  &sys_reset
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Raise {
            bindings = <
&trans        &kp F1  &kp F2  &kp F3  &kp F4  &kp F5   &kp F6     &kp F7    &kp F8    &kp F9     &kp F10       &trans
&trans        &trans  &trans  &trans  &trans  &kp F11  &kp F12    &kp HOME  &kp UP    &kp END    &trans        &trans
&trans        &trans  &trans  &trans  &trans  &trans   &kp PG_UP  &kp LEFT  &kp DOWN  &kp RIGHT  &kp LS(PIPE)  &trans
&trans        &trans  &trans  &trans  &trans  &trans   &kp PG_DN  &trans    &trans    &trans     &kp BSLH      &trans
&kp LS(LPAR)  &trans  &trans  &trans  &trans  &trans   &trans     &trans    &trans    &trans     &trans        &kp LS(RPAR)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Game {
            bindings = <
&kp GRAVE  &kp N1    &kp N2  &kp N3    &kp N4     &kp N5     &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB    &kp T     &kp Q   &kp W     &kp E      &kp R      &trans  &trans  &trans  &trans  &trans  &trans
&kp ESC    &kp G     &kp A   &kp S     &kp D      &kp F      &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp Z     &kp X   &kp C     &kp V      &kp B      &trans  &trans  &trans  &trans  &trans  &trans
&trans     &kp LGUI  &kp M   &kp LALT  &kp LCTRL  &kp SPACE  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
